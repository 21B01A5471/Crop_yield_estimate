# -*- coding: utf-8 -*-
"""deploy.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1w8k3HniCLL_EbthA-Ic2iE_kHJXXQcGs
"""

#pip install streamlit

import streamlit as st
import pickle
import pandas as pd
from PIL import Image

# Load your crop yield prediction model (replace 'randomforestmodel.pkl' with your model file)
with open("randomforestmodel.pkl", "rb") as file:
    randomforestmodel = pickle.load(file)

# Streamlit app
st.title("Crop Yield Prediction")
st.markdown("Team-34")

# Load an image for the app
image = Image.open("crop_yeild_img.jpeg")
st.image(image, use_column_width=True)

# Input fields for user to enter crop-related information
st.subheader("Enter Crop Information:")
Basal_DAP = st.number_input("Basal DAP", min_value=0.0, max_value=1.0, step=0.01)
Acre = st.number_input("Acre", min_value=0.0, max_value=1000.0, step=1.0)
SeedingSowingTransplanting = st.number_input("Seeding Sowing Transplanting", min_value=0.0, max_value=1.0, step=0.01)
TransDetFactor_CalendarDate = st.number_input("TransDetFactor CalendarDate", min_value=0.0, max_value=1.0, step=0.01)

# Predict button
if st.button("Predict Yield"):
    # Create a DataFrame from user inputs
    user_data = pd.DataFrame({
        'Basal_DAP': [Basal_DAP],
        'Acre': [Acre],
        'SeedingSowingTransplanting': [SeedingSowingTransplanting],
        'TransDetFactor_CalendarDate': [TransDetFactor_CalendarDate]
    })

    # Make predictions on user data (replace this with your actual prediction code)
    predicted_yield = randomforestmodel.predict(user_data)

    # Display the prediction result
    st.header("Crop Yield Prediction:")
    st.subheader(f"Predicted Yield: {predicted_yield[0]} acres")  # Added [0] to access the first prediction

